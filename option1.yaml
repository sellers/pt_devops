{# jinja2 #}
#cloud-config
# for PT DevOps Testing
# objective: install stack of nginx+flask+redis
output:
 all: "|tee -a /var/tmp/cloudinit.out"
hostname: {{ hostname }}
manage_etc_hosts: true
bootcmd:
 - useradd -g ubuntu -u 1001 -s /bin/bash -d /home/pt-user -c 'AWS default user (PT)' pt-user
 - usermod -g admin pt-user
apt_sources:
packages:
 - redis-server
 - python-pip
 - python-boto
 - python-flask
 - python-redis
 - nginx
final_message: "The system is up, after $UPTIME seconds"
runcmd:
{% if production %}
 - touch /PRODUCTION
{% else %}
 - touch /DEVEL
{% endif %}
 - echo [Credentials] > /etc/default/boto
 - echo aws_access_key_id = {{ aws_key }} >> /etc/default/boto
 - echo aws_secret_access_key = {{ aws_secret }} >> /etc/default/boto
 - echo [Boto] >> /etc/default/boto
 - echo http_socket_timeout = http_socket_timeout = 1800 >> /etc/default/boto
 - ln -s /etc/default/boto /root/.boto
 - ln -s /etc/default/boto /home/pt-user/.boto
 - ln -s /etc/default/boto /etc/boto.cfg
 - pip install awscli
 - echo "pt" > /root/S3_BUCKET
 - |
    python -c "
    import boto
    bucket=open('/root/S3_BUCKET', 'r').readline().strip()
    boto.connect_s3().create_bucket(bucket)
    " 
{% if production %}
 -  AWS_CONFIG_FILE=/home/ubuntu/.boto aws s3 cp s3://HDP/db_dumps/{{hostname}}/{{hostname}}-latest-lake.pg_dump /tmp/
{% else %}
 -  AWS_CONFIG_FILE=/home/ubuntu/.boto aws --region us-west-2 s3 cp s3://HDP/db_dumps/{{hostname}}/{{hostname}}-latest-lake.pg_dump /tmp/
{% endif %}
 - su -c 'pg_restore -d fs /tmp/{{hostname}}-latest-lake.pg_dump' postgres
 - service apache2 restart
