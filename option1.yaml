{# jinja2 #}
#cloud-config
# for PT DevOps Testing
# objective: install stack of nginx+flask+redis
output:
 all: "|tee -a /var/tmp/cloudinit.out"
hostname: {{ hostname }}
manage_etc_hosts: true
apt_sources:
packages:
 - redis-server
 - python-pip
 - python-boto
 - python-flask
 - python-redis
 - nginx
 - python-virtualenv
 - uwsgi
 - git
final_message: "The system is up, after $UPTIME seconds"
runcmd:
{% if production %}
 - touch /PRODUCTION
{% else %}
 - touch /DEVEL
{% endif %}
 - echo [Credentials] > /etc/default/boto
 - echo aws_access_key_id = {{ aws_key }} >> /etc/default/boto
 - echo aws_secret_access_key = {{ aws_secret }} >> /etc/default/boto
 - echo [Boto] >> /etc/default/boto
 - echo http_socket_timeout = http_socket_timeout = 1800 >> /etc/default/boto
 - ln -s /etc/default/boto /root/.boto
 - ln -s /etc/default/boto /home/pt-user/.boto
 - ln -s /etc/default/boto /etc/boto.cfg
 - pip install awscli
 - echo "cgseller-pt" > /root/S3_BUCKET
 - |
    python -c "
    import boto
    bucket=open('/root/S3_BUCKET', 'r').readline().strip()
    boto.connect_s3().create_bucket(bucket)
    " 
- mkdir /var/run/pt
- mkdir /var/log/pt
- mkdir /etc/pt
- chown www_data:www_data /var/run/pt
- chown www_data:www_data /var/log/pt
- mkdir /home/ubuntu/pt
- chown ubuntu /home/ubuntu/pt
- chgrp www_data /home/ubuntu/pt
- pip install virtualenv uwsgi
- |
   cd /home/ubuntu/pt
   virtualenv env
   source env/bin/activate
  pip install flask
# this may be wrapped in loop in case pip fails - 
{% if production %}
 -  AWS_CONFIG_FILE=/home/ubuntu/.boto aws s3 cp s3://cgseller-pt/db_dumps/{{hostname}}/{{hostname}}-latest.pg_dump /tmp/
{% else %}
 -  AWS_CONFIG_FILE=/home/ubuntu/.boto aws --region us-west-2 s3 cp s3://cgseller-pt/db_dumps/{{hostname}}/{{hostname}}-latest-dev.pg_dump /tmp/
{% endif %}
 - git clone https://github.com/sellers/pt_devops.git /home/ubuntu/pt_src
 - cp /home/ubuntu/pt_src/conf/pt_nginx.conf /etc/nginx/sites-available/pt
 - cp /home/ubuntu/pt_src/conf/pt_uwsgi.ini /etc/pt/uwsgi.ini
 - cp /home/ubuntu/pt_src/conf/pt_init.conf /etc/conf/pt.conf
 - ln -s /etc/nginx/sites-available/pt /etc/nginx/sites-enabled/pt
 - ln -s /etc/uwsgi/apps-available/pt.ini /etc/uwsgi/apps-enabled/pt.ini
 - service nginx restart
 - service pt start
